name: Build and Deploy to EC2

on:
  push:
    branches:
      - master
  workflow_dispatch:    

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: |
         echo "${{ secrets.DOCKERHUB_TOKEN }}"
         echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          short_sha=$(echo "${{ github.sha }}" | cut -c1-9)
          echo $short_sha
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:$short_sha -f ./nginx/Dockerfile .

      - name: Push Docker image
        run: |
          short_sha=$(echo "${{ github.sha }}" | cut -c1-9)
          echo $short_sha
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:$short_sha


  deploy:
    runs-on: ubuntu-latest    
    needs: build-and-push
    steps:
      - name: Log in to Docker Hub
        run: |
         short_sha=$(echo "${{ github.sha }}" | cut -c1-9)
         echo $short_sha
         echo "${{ secrets.DOCKERHUB_TOKEN }}"
         echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Copy SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          set -xe
          cd ~

          if [ -d "devopsrorbilling" ]; then
           sudo bash -c '
            cd devopsrorbilling
            git pull origin master
           '
          else
           sudo git clone https://github.com/naveen2112/devopsrorbilling.git
           sudo bash -c '
            cd devopsrorbilling
           '
          fi

          # Replace the image tag with git SHA
          sudo ls -la
          cd devopsrorbilling
          short_sha=$(echo "${{ github.sha }}" | cut -c1-9)
          echo $short_sha
          export short_sha=${short_sha}
          sudo sed -i "s|naveen2112/nginx:*|naveen2112/nginx:$short_sha|" docker-compose.yml
          
          cat docker-compose.yml

          # Pull latest docker image
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:$short_sha

          #  Start containers with inline env
          sudo docker-compose up -d 
          EOF

